!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";function d(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}c.__esModule=!0;var e=function(){function a(){d(this,a),this.canvas=$("#canvas")[0],this.ctx=this.canvas.getContext("2d"),this.gradCanvas=$("#gradiant-canvas-dual")[0],this.gradCtx=this.gradCanvas.getContext("2d"),this.seamsDisplayed="none"}return a.prototype.setImage=function(a){this.image=new Image,this.image.onload=this.initCanvas.bind(this),this.image.src=a},a.prototype.initCanvas=function(){$("#canvas").show(),this.canvas.width=this.image.width,this.canvas.height=this.image.height,this.ctx.drawImage(this.image,0,0),$("#horizontal-size").val(this.canvas.width),$("#vertical-size").val(this.canvas.height),this.drawImagesForDisplay()},a.prototype.doResize=function(a){this.ctx.putImageData(this.colorData,0,0),this.convertGrayscale(),this.computeGradiant(!1),this.computeEnergy(a);var b=this.computeSeams(1,a)[0],c=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height);this.ripSeam(b,a,c),"vertical"===a?(this.canvas.width=this.canvas.width-1,this.gradCanvas.width=this.canvas.width):"horizontal"===a&&(this.canvas.height=this.canvas.height-1,this.gradCanvas.height=this.canvas.height),this.ctx.putImageData(c,0,0)},a.prototype.resize=function(a,b){var c=this.canvas.height-b,d=this.canvas.width-a;for((0>d||0>c)&&console.log("Cannot increase image size...yet");c>0||d>0;)d>0&&(this.doResize("vertical"),--d),c>0&&(this.doResize("horizontal"),--c),console.log(c,d);this.drawImagesForDisplay(),"vertical"===this.seamsDisplayed?this.displayVerticalSeams():"horizontal"===this.seamsDisplayed?this.displayHorizontalSeams():"none"===this.seamsDisplayed&&this.hideSeams(),$("#horizontal-size").val(this.canvas.width),$("#vertical-size").val(this.canvas.height)},a.prototype.drawImagesForDisplay=function(){this.colorData=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height),this.convertGrayscale(),this.computeGradiant(),this.computeSeamImageDatas()},a.prototype.computeSeamImageDatas=function(){this.computeEnergy("vertical");var a=this.computeSeams(1,"vertical"),b=this.copyArrayBuffer(this.colorData),c=this.copyArrayBuffer(this.gradData);this.vertData=this.traceSeam(a,b),this.vertGradData=this.traceSeam(a,c),this.computeEnergy("horizontal");var d=this.computeSeams(1,"horizontal");b=this.copyArrayBuffer(this.colorData),c=this.copyArrayBuffer(this.gradData),this.horzData=this.traceSeam(d,b),this.horzGradData=this.traceSeam(d,c)},a.prototype.copyArrayBuffer=function(a){return new ImageData(new Uint8ClampedArray(a.data),a.width,a.height)},a.prototype.displayVerticalSeams=function(){this.seamsDisplayed="vertical",this.ctx.putImageData(this.vertData,0,0),this.gradCtx.putImageData(this.vertGradData,0,0)},a.prototype.displayHorizontalSeams=function(){this.seamsDisplayed="horizontal",this.ctx.putImageData(this.horzData,0,0),this.gradCtx.putImageData(this.horzGradData,0,0)},a.prototype.hideSeams=function(){this.seamsDisplayed="none",this.ctx.putImageData(this.colorData,0,0),this.gradCtx.putImageData(this.gradData,0,0)},a.prototype.convertGrayscale=function(){var a=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height);this.grayscaleImage=new jsfeat.matrix_t(this.canvas.width,this.canvas.height,jsfeat.U8_t|jsfeat.C1_t),jsfeat.imgproc.grayscale(a.data,this.canvas.width,this.canvas.height,this.grayscaleImage);for(var b=new Uint32Array(a.data.buffer),c=255<<24,d=this.grayscaleImage.cols*this.grayscaleImage.rows,e=0;--d>=0;)e=this.grayscaleImage.data[d],b[d]=c|e<<16|e<<8|e},a.prototype.computeGradiant=function(){this.gradCanvas.width=this.canvas.width,this.gradCanvas.height=this.canvas.width,this.gradCtx.drawImage(this.image,0,0,this.canvas.width,this.canvas.height),this.gradData=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height);var a=new Uint32Array(this.gradData.data.buffer);this.UInt8DualGradData=new jsfeat.matrix_t(this.canvas.width,this.canvas.height,jsfeat.U8_t|jsfeat.C1_t),this.gradiantImage=new jsfeat.matrix_t(this.canvas.width,this.canvas.height,jsfeat.S32C2_t),jsfeat.imgproc.sobel_derivatives(this.grayscaleImage,this.gradiantImage);for(var b=255<<24,c=this.gradiantImage.cols*this.gradiantImage.rows,d=0,e=0,f=0;--c>=0;)d=Math.abs(this.gradiantImage.data[c<<1]),e=Math.abs(this.gradiantImage.data[(c<<1)+1]),f=255&Math.sqrt(Math.pow(d,2)+Math.pow(e,2)),this.UInt8DualGradData[c]=f,a[c]=b|f<<16|f<<8|f;this.gradCtx.putImageData(this.gradData,0,0)},a.prototype.computeEnergy=function(a){this.costMatrix=[],this.neighborMatrix=[];for(var b=0;b<this.canvas.width;++b){this.costMatrix[b]=[],this.neighborMatrix[b]=[];for(var c=0;c<this.canvas.height;++c)this.costMatrix[b][c]=255,this.neighborMatrix[b][c]=null}for(var b=0;b<this.canvas.width;b++)for(var c=0;c<this.canvas.height;c++)this.costMatrix[b][c]=this.cost(b,c,a)},a.prototype.cost=function b(a,c,d){var e=this.UInt8DualGradData,b=e[this.at(a,c)];if(0===c&&"vertical"===d||0===a&&"horizontal"===d)return b;var f=this.getMinNeighbor(a,c,e,d);return this.neighborMatrix[a][c]=f,b+=f.cost},a.prototype.at=function(a,b){return b*this.canvas.width+a},a.prototype.getNeighbor=function(a,b,c){return{x:a,y:b,cost:c[this.at(a,b)]}},a.prototype.getNeighbors=function(a,b,c,d){var e=[];if("vertical"===d){if(0===b)return e;0===a?(e.push(this.getNeighbor(a,b-1,c)),e.push(this.getNeighbor(a+1,b-1,c))):a===this.canvas.width-1?(e.push(this.getNeighbor(a-1,b-1,c)),e.push(this.getNeighbor(a,b-1,c))):(e.push(this.getNeighbor(a-1,b-1,c)),e.push(this.getNeighbor(a,b-1,c)),e.push(this.getNeighbor(a+1,b-1,c)))}else if("horizontal"===d){if(0===a)return e;0===b?(e.push(this.getNeighbor(a-1,b,c)),e.push(this.getNeighbor(a-1,b+1,c))):b===this.canvas.height-1?(e.push(this.getNeighbor(a-1,b-1,c)),e.push(this.getNeighbor(a-1,b,c))):(e.push(this.getNeighbor(a-1,b-1,c)),e.push(this.getNeighbor(a-1,b,c)),e.push(this.getNeighbor(a-1,b+1,c)))}return e},a.prototype.getMinNeighbor=function(a,b,c,d){var e,f,g,h=null;if("vertical"===d){if(0===b)return neighbors;0===a?(e=this.getNeighbor(a,b-1,c),f=this.getNeighbor(a+1,b-1,c),h=e.cost<f.cost?e:f):a===this.canvas.width-1?(e=this.getNeighbor(a-1,b-1,c),f=this.getNeighbor(a,b-1,c),h=e.cost<f.cost?e:f):(e=this.getNeighbor(a-1,b-1,c),f=this.getNeighbor(a,b-1,c),g=this.getNeighbor(a+1,b-1,c),h=e.cost<f.cost?e:f,h=h.cost<g.cost?h:g)}else if("horizontal"===d){if(0===a)return neighbors;0===b?(e=this.getNeighbor(a-1,b,c),f=this.getNeighbor(a-1,b+1,c),h=e.cost<f.cost?e:f):b===this.canvas.height-1?(e=this.getNeighbor(a-1,b-1,c),f=this.getNeighbor(a-1,b,c),h=e.cost<f.cost?e:f):(e=this.getNeighbor(a-1,b-1,c),f=this.getNeighbor(a-1,b,c),g=this.getNeighbor(a-1,b+1,c),h=e.cost<f.cost?e:f,h=h.cost<g.cost?h:g)}return h},a.prototype.computeSeams=function(a,b){var c;"vertical"===b?c=this.getBottomEdgeMin(a):"horizontal"===b&&(c=this.getRightEdgeMin(a));for(var d=[],e=0;e<c.length;e++){for(var f=c[e].x,g=c[e].y,h="vertical"===b?g:f,i=[];h>0;){i.push({x:f,y:g});var j=this.neighborMatrix[f][g];f=j.x,g=j.y,--h}i.push({x:f,y:g}),d.push(i)}return d},a.prototype.getBottomEdgeMin=function(a){for(var b=this.canvas.height-1,c=[{x:0,y:b,cost:this.costMatrix[0][b]}],d=0;d<this.costMatrix.length;d++){var e=this.costMatrix[d][b];if(Object.keys(c).length<=a)c.push({x:d,y:b,cost:e});else{var f=_.max(c,function(a){return a.cost});e<f.cost&&(c.push({x:d,y:b,cost:e}),c=_.filter(c,function(a){return a.cost<f.cost}))}}return c=c.slice(0,a)},a.prototype.getRightEdgeMin=function(a){for(var b=this.canvas.width-1,c=[{x:b,y:0,cost:this.costMatrix[b][0]}],d=0;d<this.costMatrix[0].length;d++){var e=this.costMatrix[b][d];if(Object.keys(c).length<=a)c.push({x:b,y:d,cost:e});else{var f=_.max(c,function(a){return a.cost});e<f.cost&&(c.push({x:b,y:d,cost:e}),c=_.filter(c,function(a){return a.cost<f.cost}))}}return c=c.slice(0,a)},a.prototype.traceSeam=function(a,b){for(var c=new Uint32Array(b.data.buffer),d=0;d<a.length;d++)for(var e=a[d],f=0;f<e.length;f++)c[this.at(e[f].x,e[f].y)]=-16776961;return b},a.prototype.ripSeam=function(a,b,c){var d,e=new Uint32Array(c.data.buffer);if("vertical"===b){d=new Uint32Array((this.canvas.width-1)*this.canvas.height);for(var f=0;f<this.canvas.height;f++)for(var g=_.find(a,function(a){return a.y===f}),h=0;h<this.canvas.width;h++)e[this.at(h,f)]=h<g.x?e[this.at(h,f)]:e[this.at(h+1,f)]}else if("horizontal"===b){d=new Uint32Array(this.canvas.width*(this.canvas.height-1));for(var h=0;h<this.canvas.width;h++)for(var g=_.find(a,function(a){return a.x===h}),f=0;f<this.canvas.height;f++)e[this.at(h,f)]=f<g.y?e[this.at(h,f)]:e[this.at(h,f+1)]}},a}();c["default"]=e,b.exports=c["default"]},{}],2:[function(a){"use strict";function b(a){return a&&a.__esModule?a:{"default":a}}var c=a("./carver.js"),d=b(c);$(document).ready(function(){function a(a){$(".current-content").slideUp(400,function(){$(".intro").hide(),c.setImage(a),$(".current-content").slideDown(600)})}function b(b){var c=new FileReader;c.onload=function(b){a(b.target.result)},c.readAsDataURL(b.target.files[0])}var c=new d["default"];$("#ballon-link").on("click",function(){console.log("called"),a("./images/ballon.jpg")}),$("#tower-link").on("click",function(){a("./images/tower.jpg")}),$("#upload-link").on("click",function(a){a.preventDefault(),$("#upload").trigger("click")}),$("#upload").on("change",b),$("#resize").on("click",function(){var a=parseInt($("#horizontal-size").val()),b=parseInt($("#vertical-size").val());c.resize(a,b)}),$(".image-btns").on("click",function(a){$(".image-canvas").hide();var b=a.target.id;"original-btn"==b?$("#canvas").show():"gradiant-btn-dual"==b&&$("#gradiant-canvas-dual").show()}),$(".seam-btns").on("click",function(a){var b=a.target.id;"no-seams-btn"==b?c.hideSeams():"vertical-seams-btn"==b?c.displayVerticalSeams():"horizontal-seams-btn"==b&&c.displayHorizontalSeams()})})},{"./carver.js":1}]},{},[2,1]);